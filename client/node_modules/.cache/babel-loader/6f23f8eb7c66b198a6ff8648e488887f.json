{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan desk\\\\Desktop\\\\projects\\\\SpotifyTopics\\\\client\\\\src\\\\components\\\\Episode.js\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"../App.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faPauseCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst spotifyWebApi = new Spotify();\nconst topics = [{\n  title: \"Topic #1\",\n  start: 0,\n  stop: 7,\n  key: 1\n}, {\n  title: \"Topic #2\",\n  start: 7,\n  stop: 16,\n  key: 2\n}, {\n  title: \"Topic #3\",\n  start: 16,\n  stop: 30,\n  key: 3\n}];\n\nclass Episode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episode: \"\",\n      show: \"\",\n      currentTime: 0,\n      playing: false,\n      FontAwesomeIcon: \"faPlayCircle\"\n    };\n  }\n\n  componentDidMount() {\n    var episodeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n    spotifyWebApi.getEpisode(episodeId).then(response => {\n      this.setState({\n        episode: response,\n        show: response.show\n      });\n    });\n  }\n\n  generatePlayButtonContent() {\n    if (this.state.playing) {\n      return [/*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPauseCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"playBtnText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"Paus\")];\n    } else {\n      return [/*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlayCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"playBtnText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, \"Play\")];\n    }\n  }\n\n  calculateProcentage(start, stop) {\n    let duration = 30;\n    return (stop - start) / duration * 100;\n  }\n\n  updateTime(timestamp) {\n    timestamp = Math.floor(timestamp);\n    this.setState({\n      currentTime: timestamp\n    });\n  }\n\n  updateTimeline(percent) {\n    let progress = document.querySelector(\".timeline-progress\");\n    progress.style[\"width\"] = percent;\n  } //second version\n\n\n  togglePlay() {\n    let status = this.state.playing;\n    let audio = document.getElementById(\"Player\"); //if not currently playing\n\n    if (!status) {\n      status = true;\n      audio.play();\n      let that = this;\n      setInterval(() => {\n        let currentTime = audio.currentTime;\n        let duration = 30; //all audio-clips are previews of 30s from the podcast.\n\n        let percent = currentTime / duration * 100 + \"%\";\n        that.updateTimeline(percent);\n        that.updateTime(currentTime);\n      }, 100);\n    } else if (status) {\n      audio.pause();\n      status = false;\n    }\n\n    this.setState({\n      playing: status\n    });\n  }\n\n  forwardAudioToTimeStamp(time) {\n    var player = document.getElementById(\"Player\");\n    player.currentTime = time;\n    let percent = player.currentTime / 30 * 100 + \"%\";\n    this.updateTimeline(percent);\n    this.updateTime(time);\n  }\n\n  generateTimeStampNumbers(start, stop) {\n    let startValue;\n    let stopValue;\n\n    if (start < 10) {\n      startValue = `0:0${start}`;\n    }\n\n    if (start > 9) {\n      startValue = `0:${start}`;\n    }\n\n    if (stop < 10) {\n      stopValue = `0:0${stop}`;\n    }\n\n    if (stop > 9) {\n      stopValue = `0:${stop}`;\n    }\n\n    return `${startValue} - ${stopValue} `;\n  }\n\n  navigateBackToDiscover() {\n    console.log(\"start redirect...\");\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/discover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 12\n      }\n    });\n  }\n\n  checkTopicListClass(start, stop) {\n    if (this.state.currentTime < stop - 0.5 && this.state.currentTime > start - 0.5) {\n      return \"activeTopicList\";\n    }\n  }\n\n  render() {\n    if (!this.state.show.images) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-lg-9 episodeDescriptionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeDescriptionInnerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"backBtn\",\n      to: \"/discover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"\\u2190 Back to discover\"), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/discover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"backBtn\",\n      onClick: () => this.navigateBackToDiscover(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"\\u2190 Back to discover\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row episodeHeaderRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"episode-thumbnail\",\n      src: this.state.episode.images[0].url,\n      alt: \"episode thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 episodeHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeFragment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"episodeType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, \"Podcast\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"episodeTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \" \", this.state.episode.name), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"episodePublisher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, this.state.show.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row episodePlayerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: this.state.episode.audio_preview_url,\n      type: \"audio/mpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"playBtn\",\n      onClick: () => this.togglePlay(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, this.generatePlayButtonContent()), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"openInSpotifyBtn\",\n      onClick: () => window.location.href = this.state.episode.uri,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \"Open in Spotify\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      className: \"progressBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, topics.map(topic => {\n      return /*#__PURE__*/React.createElement(ProgressBar, {\n        \"data-tip\": true,\n        \"data-for\": topic.title,\n        className: \"topicTimelineSegment\",\n        now: this.calculateProcentage(topic.start, topic.stop),\n        onClick: () => this.forwardAudioToTimeStamp(topic.start),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      });\n    }), topics.map(topic => {\n      return /*#__PURE__*/React.createElement(ReactTooltip, {\n        id: topic.title,\n        place: \"bottom\",\n        type: \"light\",\n        effect: \"solid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }, this.generateTimeStampNumbers(topic.start, topic.stop)));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeDescriptionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"episodeDescriptionTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, \"Episode description\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"episodeDescriptionText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, this.state.episode.description)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-lg-3 episodeTopicsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      className: \"listGroupItemHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, \"Episode topics\"), topics.map(topic => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        onClick: () => this.forwardAudioToTimeStamp(topic.start),\n        className: this.checkTopicListClass(topic.start, topic.stop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"listGroupItemTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"listGroupItemTime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, this.generateTimeStampNumbers(topic.start, topic.stop)));\n    })))));\n  }\n\n}\n\nexport default Episode;","map":{"version":3,"sources":["C:/Users/Johan desk/Desktop/projects/SpotifyTopics/client/src/components/Episode.js"],"names":["React","Component","ListGroup","ProgressBar","ReactTooltip","Spotify","Link","Redirect","faPlayCircle","faPauseCircle","FontAwesomeIcon","spotifyWebApi","topics","title","start","stop","key","Episode","constructor","props","state","episode","show","currentTime","playing","componentDidMount","episodeId","window","location","href","substring","lastIndexOf","getEpisode","then","response","setState","generatePlayButtonContent","calculateProcentage","duration","updateTime","timestamp","Math","floor","updateTimeline","percent","progress","document","querySelector","style","togglePlay","status","audio","getElementById","play","that","setInterval","pause","forwardAudioToTimeStamp","time","player","generateTimeStampNumbers","startValue","stopValue","navigateBackToDiscover","console","log","checkTopicListClass","render","images","url","name","audio_preview_url","uri","map","topic","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport \"../App.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faPauseCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst spotifyWebApi = new Spotify();\r\n\r\nconst topics = [\r\n  { title: \"Topic #1\", start: 0, stop: 7, key: 1 },\r\n  { title: \"Topic #2\", start: 7, stop: 16, key: 2 },\r\n  { title: \"Topic #3\", start: 16, stop: 30, key: 3 },\r\n];\r\n\r\nclass Episode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      episode: \"\",\r\n      show: \"\",\r\n      currentTime: 0,\r\n      playing: false,\r\n      FontAwesomeIcon: \"faPlayCircle\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var episodeId = window.location.href.substring(\r\n      window.location.href.lastIndexOf(\"/\") + 1\r\n    );\r\n    spotifyWebApi.getEpisode(episodeId).then((response) => {\r\n      this.setState({\r\n        episode: response,\r\n        show: response.show,\r\n      });\r\n    });\r\n  }\r\n\r\n  generatePlayButtonContent() {\r\n    if (this.state.playing) {\r\n      return [\r\n        <FontAwesomeIcon icon={faPauseCircle} />,\r\n        <span className=\"playBtnText\">Paus</span>,\r\n      ];\r\n    } else {\r\n      return [\r\n        <FontAwesomeIcon icon={faPlayCircle} />,\r\n        <span className=\"playBtnText\">Play</span>,\r\n      ];\r\n    }\r\n  }\r\n\r\n  calculateProcentage(start, stop) {\r\n    let duration = 30;\r\n    return ((stop - start) / duration) * 100;\r\n  }\r\n\r\n  updateTime(timestamp) {\r\n    timestamp = Math.floor(timestamp);\r\n    this.setState({\r\n      currentTime: timestamp,\r\n    });\r\n  }\r\n\r\n  updateTimeline(percent) {\r\n    let progress = document.querySelector(\".timeline-progress\");\r\n    progress.style[\"width\"] = percent;\r\n  }\r\n\r\n  //second version\r\n  togglePlay() {\r\n    let status = this.state.playing;\r\n    let audio = document.getElementById(\"Player\");\r\n\r\n    //if not currently playing\r\n    if (!status) {\r\n      status = true;\r\n      audio.play();\r\n      let that = this;\r\n\r\n      setInterval(() => {\r\n        let currentTime = audio.currentTime;\r\n        let duration = 30; //all audio-clips are previews of 30s from the podcast.\r\n        let percent = (currentTime / duration) * 100 + \"%\";\r\n        that.updateTimeline(percent);\r\n        that.updateTime(currentTime);\r\n      }, 100);\r\n    } else if (status) {\r\n      audio.pause();\r\n      status = false;\r\n    }\r\n    this.setState({ playing: status });\r\n  }\r\n\r\n  forwardAudioToTimeStamp(time) {\r\n    var player = document.getElementById(\"Player\");\r\n    player.currentTime = time;\r\n    let percent = (player.currentTime / 30) * 100 + \"%\";\r\n    this.updateTimeline(percent);\r\n    this.updateTime(time);\r\n  }\r\n\r\n  generateTimeStampNumbers(start, stop) {\r\n    let startValue;\r\n    let stopValue;\r\n    if (start < 10) {\r\n      startValue = `0:0${start}`;\r\n    }\r\n    if (start > 9) {\r\n      startValue = `0:${start}`;\r\n    }\r\n    if (stop < 10) {\r\n      stopValue = `0:0${stop}`;\r\n    }\r\n    if (stop > 9) {\r\n      stopValue = `0:${stop}`;\r\n    }\r\n\r\n    return `${startValue} - ${stopValue} `;\r\n  }\r\n\r\n  navigateBackToDiscover() {\r\n    console.log(\"start redirect...\");\r\n    return <Redirect to=\"/discover\" />;\r\n  }\r\n\r\n  checkTopicListClass(start, stop) {\r\n    if (\r\n      this.state.currentTime < stop - 0.5 &&\r\n      this.state.currentTime > start - 0.5\r\n    ) {\r\n      return \"activeTopicList\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.show.images) {\r\n      return <span></span>;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-9 episodeDescriptionContainer\">\r\n            <div className=\"episodeDescriptionInnerContainer\">\r\n              <Link className=\"backBtn\" to=\"/discover\">\r\n                ← Back to discover\r\n              </Link>\r\n              <Redirect to=\"/discover\" />\r\n              <a\r\n                className=\"backBtn\"\r\n                onClick={() => this.navigateBackToDiscover()}\r\n              >\r\n                ← Back to discover\r\n              </a>\r\n\r\n              <div className=\"row episodeHeaderRow\">\r\n                <div className=\"col-lg-3\">\r\n                  <img\r\n                    className=\"episode-thumbnail\"\r\n                    src={this.state.episode.images[0].url}\r\n                    alt=\"episode thumbnail\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-lg-9 episodeHeader\">\r\n                  <div className=\"episodeFragment\">\r\n                    <h3 className=\"episodeType\">Podcast</h3>\r\n                    <h1 className=\"episodeTitle\"> {this.state.episode.name}</h1>\r\n                    <h2 className=\"episodePublisher\">{this.state.show.name}</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row episodePlayerContainer\">\r\n                <audio id=\"Player\">\r\n                  <source\r\n                    src={this.state.episode.audio_preview_url}\r\n                    type=\"audio/mpeg\"\r\n                  ></source>\r\n                </audio>\r\n\r\n                <div className=\"col-lg-3\">\r\n                  <button className=\"playBtn\" onClick={() => this.togglePlay()}>\r\n                    {this.generatePlayButtonContent()}\r\n                  </button>\r\n                  <button\r\n                    className=\"openInSpotifyBtn\"\r\n                    onClick={() =>\r\n                      (window.location.href = this.state.episode.uri)\r\n                    }\r\n                  >\r\n                    Open in Spotify\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"col-lg-9\">\r\n                  <div className=\"timeline\">\r\n                    <ProgressBar className=\"progressBarContainer\">\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <ProgressBar\r\n                            data-tip\r\n                            data-for={topic.title}\r\n                            className=\"topicTimelineSegment\"\r\n                            now={this.calculateProcentage(\r\n                              topic.start,\r\n                              topic.stop\r\n                            )}\r\n                            onClick={() =>\r\n                              this.forwardAudioToTimeStamp(topic.start)\r\n                            }\r\n                          />\r\n                        );\r\n                      })}\r\n\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <ReactTooltip\r\n                            id={topic.title}\r\n                            place=\"bottom\"\r\n                            type=\"light\"\r\n                            effect=\"solid\"\r\n                          >\r\n                            <h1>{topic.title}</h1>\r\n                            <p>\r\n                              {this.generateTimeStampNumbers(\r\n                                topic.start,\r\n                                topic.stop\r\n                              )}\r\n                            </p>\r\n                          </ReactTooltip>\r\n                        );\r\n                      })}\r\n                    </ProgressBar>\r\n\r\n                    <div className=\"timeline-progress\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"episodeDescriptionContainer\">\r\n                <h2 className=\"episodeDescriptionTitle\">Episode description</h2>\r\n                <p className=\"episodeDescriptionText\">\r\n                  {this.state.episode.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col col-lg-3 episodeTopicsContainer\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item className=\"listGroupItemHeader\">\r\n                Episode topics\r\n              </ListGroup.Item>\r\n\r\n              {topics.map((topic) => {\r\n                return (\r\n                  <ListGroup.Item\r\n                    onClick={() => this.forwardAudioToTimeStamp(topic.start)}\r\n                    className={this.checkTopicListClass(\r\n                      topic.start,\r\n                      topic.stop\r\n                    )}\r\n                  >\r\n                    <span className=\"listGroupItemTitle\">{topic.title}</span>\r\n                    <span className=\"listGroupItemTime\">\r\n                      {this.generateTimeStampNumbers(topic.start, topic.stop)}\r\n                    </span>\r\n                  </ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Episode;\r\n"]},"metadata":{},"sourceType":"module"}