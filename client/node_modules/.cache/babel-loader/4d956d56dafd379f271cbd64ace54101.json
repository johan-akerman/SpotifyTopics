{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan desk\\\\Desktop\\\\projects\\\\SpotifyTopics\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./components/LandingPage\";\nimport Discover from \"./components/Discover\";\nimport Episode from \"./components/Episode\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    spotifyApi.getMe().then(response => {\n      this.setState({\n        user: response\n      });\n    });\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  checkAuth() {\n    if (!this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/discover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainAppContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), this.checkAuth(), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      auth: this.state.loggedIn,\n      path: \"/login\",\n      exact: true,\n      component: LandingPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      auth: this.state.loggedIn,\n      path: \"/discover\",\n      exact: true,\n      component: Discover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/discover/:id\",\n      exact: true,\n      component: Episode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"secondAppContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"This app is currently only available on bigger screens. Please switch to a device with bigger screen, for example a desktop or laptop. Mobile version coming soon!\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Johan desk/Desktop/projects/SpotifyTopics/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","Header","LandingPage","Discover","Episode","SpotifyWebApi","spotifyApi","App","constructor","props","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","user","componentDidMount","getMe","then","response","setState","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","checkAuth","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport Discover from \"./components/Discover\";\r\nimport Episode from \"./components/Episode\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n    this.state = {\r\n      loggedIn: token ? true : false,\r\n      user: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    spotifyApi.getMe().then((response) => {\r\n      this.setState({\r\n        user: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    e = r.exec(q);\r\n    while (e) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  checkAuth() {\r\n    if (!this.state.loggedIn) {\r\n      return <Redirect to=\"/login\" />;\r\n    } else {\r\n      return <Redirect to=\"/discover\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <div className=\"mainAppContainer\">\r\n            <Header user={this.state.user} />\r\n            {this.checkAuth()}\r\n            <Switch>\r\n              <Route\r\n                auth={this.state.loggedIn}\r\n                path=\"/login\"\r\n                exact\r\n                component={LandingPage}\r\n              />\r\n\r\n              <Route\r\n                auth={this.state.loggedIn}\r\n                path=\"/discover\"\r\n                exact\r\n                component={Discover}\r\n              />\r\n              <Route path=\"/discover/:id\" exact component={Episode} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n        <div className=\"secondAppContainer\">\r\n          This app is currently only available on bigger screens. Please switch\r\n          to a device with bigger screen, for example a desktop or laptop.\r\n          Mobile version coming soon!\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}