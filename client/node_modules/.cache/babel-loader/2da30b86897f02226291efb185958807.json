{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan desk\\\\Desktop\\\\projects\\\\SpotifyTopics\\\\client\\\\src\\\\components\\\\Discover.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport Spotify from \"spotify-web-api-js\";\n\nconst topics = require(\"../topics.json\");\n\nconst spotifyWebApi = new Spotify();\n\nclass Discover extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: [],\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    spotifyWebApi.getEpisodes([\"0QVuQXFPUitPeXH727JLgH\", \"2QG2XPrjKY6HYSjmxflMzP\", \"2R4VEgJfLXD2wKmL9c11l6\", \"7LWWaN9qyuSMEg2I0DLG6z\", \"3C3imZeq18TABmcswlHgzY\", \"6oyFNKq3atN7U9splhDnuI\", \"2K25jghHW8RNdDbUf2dLde\", \"1D3H532YgQPn0HW9FJK0yq\"]).then(response => {\n      this.setState({\n        episodes: response.episodes\n      });\n    });\n    console.log(this.state.episodes);\n    spotifyWebApi.getMe().then(response => {\n      this.setState({\n        user: response\n      });\n    });\n  }\n\n  getTrendingTopics() {\n    var temp = [];\n    topics.map(topic => {\n      if (topic.isTrending) {\n        temp.push(topic);\n      }\n    });\n    return temp;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodesContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Welcome \", this.state.user.display_name, \",\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), console.log(this.getTrendingTopics()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Recommended episodes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.state.episodes && this.state.episodes.map(episode => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        key: `episode - ${episode.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"podcastEpisodeCardLink\",\n        to: {\n          pathname: `/discover/${episode.id}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"podcastEpisodeCard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"thumbnail\",\n        className: \"img img-fluid\",\n        src: episode.images[0].url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"hideToLongText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }\n      }, episode.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"hideToLongText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }\n      }, episode.show.name))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Trending topics\"), this.getTrendingTopics().map(topic => {\n      return /*#__PURE__*/React.createElement(Link, {\n        className: \"podcastEpisodeCardLink\",\n        to: {\n          pathname: `/discover/${topic.episodeId}`,\n          time: topic.start\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-secondary badgeTopic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, topic.publisher)));\n    }))));\n  }\n\n}\n\nexport default Discover;","map":{"version":3,"sources":["C:/Users/Johan desk/Desktop/projects/SpotifyTopics/client/src/components/Discover.js"],"names":["React","Component","Link","Spotify","topics","require","spotifyWebApi","Discover","constructor","props","state","episodes","user","componentDidMount","getEpisodes","then","response","setState","console","log","getMe","getTrendingTopics","temp","map","topic","isTrending","push","render","display_name","episode","id","pathname","images","url","name","show","episodeId","time","start","title","publisher"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spotify from \"spotify-web-api-js\";\r\n\r\nconst topics = require(\"../topics.json\");\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\nclass Discover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { episodes: [], user: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    spotifyWebApi\r\n      .getEpisodes([\r\n        \"0QVuQXFPUitPeXH727JLgH\",\r\n        \"2QG2XPrjKY6HYSjmxflMzP\",\r\n        \"2R4VEgJfLXD2wKmL9c11l6\",\r\n        \"7LWWaN9qyuSMEg2I0DLG6z\",\r\n        \"3C3imZeq18TABmcswlHgzY\",\r\n        \"6oyFNKq3atN7U9splhDnuI\",\r\n        \"2K25jghHW8RNdDbUf2dLde\",\r\n        \"1D3H532YgQPn0HW9FJK0yq\",\r\n      ])\r\n      .then((response) => {\r\n        this.setState({\r\n          episodes: response.episodes,\r\n        });\r\n      });\r\n\r\n    console.log(this.state.episodes);\r\n\r\n    spotifyWebApi.getMe().then((response) => {\r\n      this.setState({\r\n        user: response,\r\n      });\r\n    });\r\n  }\r\n\r\n  getTrendingTopics() {\r\n    var temp = [];\r\n    topics.map((topic) => {\r\n      if (topic.isTrending) {\r\n        temp.push(topic);\r\n      }\r\n    });\r\n\r\n    return temp;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"episodesContainer\">\r\n        <h1>Welcome {this.state.user.display_name},</h1>\r\n        <br />\r\n        {console.log(this.getTrendingTopics())}\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8\">\r\n            <h2>Recommended episodes</h2>\r\n\r\n            <div className=\"row\">\r\n              {this.state.episodes &&\r\n                this.state.episodes.map((episode) => {\r\n                  return (\r\n                    <div className=\"col-lg-3\" key={`episode - ${episode.id}`}>\r\n                      <Link\r\n                        className=\"podcastEpisodeCardLink\"\r\n                        to={{\r\n                          pathname: `/discover/${episode.id}`,\r\n                        }}\r\n                      >\r\n                        <div className=\"podcastEpisodeCard\">\r\n                          <img\r\n                            alt=\"thumbnail\"\r\n                            className=\"img img-fluid\"\r\n                            src={episode.images[0].url}\r\n                          />\r\n                          <h1 className=\"hideToLongText\">{episode.name}</h1>\r\n                          <p className=\"hideToLongText\">{episode.show.name}</p>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <h2>Trending topics</h2>\r\n\r\n            {this.getTrendingTopics().map((topic) => {\r\n              return (\r\n                <Link\r\n                  className=\"podcastEpisodeCardLink\"\r\n                  to={{\r\n                    pathname: `/discover/${topic.episodeId}`,\r\n                    time: topic.start,\r\n                  }}\r\n                >\r\n                  <span className=\"badge badge-secondary badgeTopic\">\r\n                    <h1>{topic.title}</h1>\r\n                    <p>{topic.publisher}</p>\r\n                  </span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Discover;\r\n"]},"metadata":{},"sourceType":"module"}