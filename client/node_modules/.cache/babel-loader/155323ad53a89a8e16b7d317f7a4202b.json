{"ast":null,"code":"var _jsxFileName = \"/Users/Akerman/Desktop/projects/spotify/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\"\n      },\n      songs: []\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name\n        }\n      });\n    });\n  }\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then(response => {\n      this.setState({\n        songs: response.tracks.items\n      });\n      console.log(this.state.songs);\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"Log in with Spotify\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }\n      }, \"Logged in\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.showSignIn(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Now playing: \", this.state.nowPlaying.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Check now playing\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.searchSong(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"search\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, this.state.songs.map(result => /*#__PURE__*/React.createElement(\"li\", {\n      key: result.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Song name: \"), result.name, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Popularity: \"), result.popularity, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Artists: \"), result.artists.map(result => \",\" + result.name)))), /*#__PURE__*/React.createElement(\"table\", {\n      style: \"width:100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Song name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Authors\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Popularity\")), this.state.songs.map(result => /*#__PURE__*/React.createElement(\"tr\", {\n      key: result.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, result.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, result.artists.map(result => \",\" + result.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, result.popularity)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Akerman/Desktop/projects/spotify/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","songs","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","searchSong","searchTracks","tracks","items","console","log","showSignIn","render","map","result","id","popularity","artists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\",\n      },\n      songs: [],\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n        },\n      });\n    });\n  }\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then((response) => {\n      this.setState({\n        songs: response.tracks.items,\n      });\n      console.log(this.state.songs);\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return (\n        <a href=\"http://localhost:8888\">\n          <button>Log in with Spotify</button>\n        </a>\n      );\n    } else {\n      return <div>Logged in</div>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.showSignIn()}\n        <div>Now playing: {this.state.nowPlaying.name}</div>\n        <button onClick={() => this.getNowPlaying()}>Check now playing</button>\n        <button onClick={() => this.searchSong()}>search</button>\n        <ul>\n          {this.state.songs.map((result) => (\n            <li key={result.id}>\n              <h1>Song name: </h1>\n              {result.name}\n              <h1>Popularity: </h1>\n              {result.popularity}\n              <h1>Artists: </h1>\n              {result.artists.map((result) => \",\" + result.name)}\n            </li>\n          ))}\n        </ul>\n\n        <table style=\"width:100%\">\n          <tr>\n            <th>Song name</th>\n            <th>Authors</th>\n            <th>Popularity</th>\n          </tr>\n\n          {this.state.songs.map((result) => (\n            <tr key={result.id}>\n              <td>{result.name}</td>\n              <td>{result.artists.map((result) => \",\" + result.name)}</td>\n              <td>{result.popularity}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}