{"ast":null,"code":"var _jsxFileName = \"/Users/Akerman/Desktop/projects/spotify/client/src/components/Episodes.js\";\nimport React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass Episodes extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        searchInput: event.target.value\n      });\n    };\n\n    this.searchSong = event => {\n      event.preventDefault();\n      spotifyWebApi.searchEpisodes(this.state.searchInput, \"episode\").then(response => {\n        console.log(response);\n        this.setState({\n          songs: response.episodes.items // songs: response.tracks.items,\n          // songs: response.episodes.items.sort(\n          //   (a, b) => parseFloat(b.popularity) - parseFloat(a.popularity) //sorts out of popularity\n          // ),\n\n        });\n        console.log(this.state.songs);\n      });\n    };\n\n    this.state = {\n      nowPlaying: {\n        name: \"not checked\"\n      },\n      songs: [],\n      searchInput: \"\"\n    };\n  }\n\n  renderTable() {\n    if (this.state.songs === \"\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, \"No songs...\");\n    } else {\n      return /*#__PURE__*/React.createElement(Table, {\n        className: \"myTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, \"Artist\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, \"Popularity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }, this.state.songs.map(result => /*#__PURE__*/React.createElement(\"tr\", {\n        key: result.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, result.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, result.release_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, result.duration_ms)))));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.searchSong,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Search for a song\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Search lyrics\")), this.renderTable()));\n  }\n\n}\n\nexport default Episodes;","map":{"version":3,"sources":["/Users/Akerman/Desktop/projects/spotify/client/src/components/Episodes.js"],"names":["React","Component","Table","Spotify","spotifyWebApi","Episodes","constructor","handleChange","event","setState","searchInput","target","value","searchSong","preventDefault","searchEpisodes","state","then","response","console","log","songs","episodes","items","nowPlaying","name","renderTable","map","result","id","release_date","duration_ms","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify();\n\nclass Episodes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nowPlaying: {\n        name: \"not checked\",\n      },\n      songs: [],\n      searchInput: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchInput: event.target.value });\n  };\n\n  searchSong = (event) => {\n    event.preventDefault();\n    spotifyWebApi\n      .searchEpisodes(this.state.searchInput, \"episode\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          songs: response.episodes.items,\n          // songs: response.tracks.items,\n          // songs: response.episodes.items.sort(\n          //   (a, b) => parseFloat(b.popularity) - parseFloat(a.popularity) //sorts out of popularity\n          // ),\n        });\n\n        console.log(this.state.songs);\n      });\n  };\n\n  renderTable() {\n    if (this.state.songs === \"\") {\n      return <div>No songs...</div>;\n    } else {\n      return (\n        <Table className=\"myTable\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Artist</th>\n              <th>Popularity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.songs.map((result) => (\n              <tr key={result.id}>\n                <td>{result.name}</td>\n                <td>{result.release_date}</td>\n                <td>{result.duration_ms}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"container\">\n          <form onSubmit={this.searchSong}>\n            <label>\n              <h1>Search for a song</h1>\n              <br></br>\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                autoComplete=\"off\"\n              />\n            </label>\n            <button type=\"submit\">Search lyrics</button>\n          </form>\n\n          {this.renderTable()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Episodes;\n"]},"metadata":{},"sourceType":"module"}