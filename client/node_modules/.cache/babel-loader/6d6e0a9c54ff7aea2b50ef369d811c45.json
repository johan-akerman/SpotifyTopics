{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johan desk\\\\Desktop\\\\projects\\\\SpotifyTopics\\\\client\\\\src\\\\components\\\\Episode.js\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"../App.css\";\nimport Spotify from \"spotify-web-api-js\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { faPauseCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst spotifyWebApi = new Spotify();\n\nconst topics = require(\"../topics.json\");\n\nconst episodeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n\nclass Episode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episode: \"\",\n      show: \"\",\n      currentTime: 0,\n      playing: false,\n      FontAwesomeIcon: \"faPlayCircle\"\n    };\n  }\n\n  componentDidMount() {\n    var episodeId = window.location.href.substring(window.location.href.lastIndexOf(\"/\") + 1);\n    spotifyWebApi.getEpisode(episodeId).then(response => {\n      this.setState({\n        episode: response,\n        show: response.show\n      });\n    });\n    this.inter = setInterval(() => {\n      let audio = document.getElementById(\"Player\");\n      let currentTime = audio.currentTime;\n      let duration = 30; //all audio-clips are previews of 30s from the podcast.\n\n      let percent = currentTime / duration * 100 + \"%\";\n      this.updateTimeline(percent);\n      this.updateTime(currentTime);\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.inter);\n  }\n\n  generatePlayButtonContent() {\n    if (this.state.playing) {\n      return [/*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPauseCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      })];\n    } else {\n      return [/*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlayCircle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      })];\n    }\n  }\n\n  getThisEpisodesTopics() {\n    var temp = [];\n    topics.map(topic => {\n      if (topic.episodeId === \"2QG2XPrjKY6HYSjmxflMzP\") {\n        temp.push(topic);\n      }\n    });\n    console.log(temp);\n    return temp;\n  }\n\n  calculateProcentage(start, stop) {\n    let duration = 30;\n    return (stop - start) / duration * 100;\n  }\n\n  updateTime(timestamp) {\n    timestamp = Math.floor(timestamp);\n    this.setState({\n      currentTime: timestamp\n    });\n  }\n\n  updateTimeline(percent) {\n    let progress = document.querySelector(\".timeline-progress\");\n    progress.style[\"width\"] = percent;\n  }\n\n  togglePlay() {\n    let status = this.state.playing;\n    let audio = document.getElementById(\"Player\"); //if not currently playing\n\n    if (!status) {\n      status = true;\n      audio.play();\n    } else if (status) {\n      audio.pause();\n      status = false;\n    }\n\n    this.setState({\n      playing: status\n    });\n  }\n\n  forwardAudioToTimeStamp(time) {\n    var player = document.getElementById(\"Player\");\n    player.currentTime = time;\n    let percent = player.currentTime / 30 * 100 + \"%\";\n    this.updateTimeline(percent);\n    this.updateTime(time);\n  }\n\n  generateTimeStampNumbers(start, stop) {\n    let startValue;\n    let stopValue;\n\n    if (start < 10) {\n      startValue = `0:0${start}`;\n    }\n\n    if (start > 9) {\n      startValue = `0:${start}`;\n    }\n\n    if (stop < 10) {\n      stopValue = `0:0${stop}`;\n    }\n\n    if (stop > 9) {\n      stopValue = `0:${stop}`;\n    }\n\n    return `${startValue} - ${stopValue} `;\n  }\n\n  checkTopicListClass(start, stop) {\n    if (this.state.currentTime < stop - 0.5 && this.state.currentTime > start - 0.5) {\n      return \"activeTopicList\";\n    }\n  }\n\n  render() {\n    if (!this.state.show.images) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-lg-9 episodeDescriptionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeDescriptionInnerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"backBtn\",\n      to: \"/discover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"\\u2190 Back to discover\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row episodeHeaderRow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"episode-thumbnail\",\n      src: this.state.episode.images[0].url,\n      alt: \"episode thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 episodeHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeFragment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"episodeType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Podcast\"), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"episodeTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \" \", this.state.episode.name), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"episodePublisher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, this.state.show.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row episodePlayerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"Player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: this.state.episode.audio_preview_url,\n      type: \"audio/mpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      className: \"progressBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, topics.map(topic => {\n      return /*#__PURE__*/React.createElement(ProgressBar, {\n        \"data-tip\": true,\n        \"data-for\": topic.title,\n        className: \"topicTimelineSegment\",\n        now: this.calculateProcentage(topic.start, topic.stop),\n        onClick: () => this.forwardAudioToTimeStamp(topic.start),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }\n      });\n    }), topics.map(topic => {\n      return /*#__PURE__*/React.createElement(ReactTooltip, {\n        id: topic.title,\n        place: \"bottom\",\n        type: \"light\",\n        effect: \"solid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"tooltipTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"tooltipDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, this.generateTimeStampNumbers(topic.start, topic.stop)));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timeline-progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"playerControls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"playBtn\",\n      onClick: () => this.togglePlay(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, this.generatePlayButtonContent())))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"episodeDescriptionContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"episodeDescriptionTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"Episode description\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"episodeDescriptionText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, this.state.episode.description)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-lg-3 episodeTopicsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      className: \"listGroupItemHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, \"Episode topics\"), this.getThisEpisodesTopics().map(topic => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        onClick: () => this.forwardAudioToTimeStamp(topic.start),\n        className: this.checkTopicListClass(topic.start, topic.stop),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"listGroupItemTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, topic.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"listGroupItemTime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }\n      }, this.generateTimeStampNumbers(topic.start, topic.stop)));\n    })))));\n  }\n\n}\n\nexport default Episode;","map":{"version":3,"sources":["C:/Users/Johan desk/Desktop/projects/SpotifyTopics/client/src/components/Episode.js"],"names":["React","Component","ListGroup","ProgressBar","ReactTooltip","Spotify","Link","Redirect","faPlayCircle","faPauseCircle","FontAwesomeIcon","spotifyWebApi","topics","require","episodeId","window","location","href","substring","lastIndexOf","Episode","constructor","props","state","episode","show","currentTime","playing","componentDidMount","getEpisode","then","response","setState","inter","setInterval","audio","document","getElementById","duration","percent","updateTimeline","updateTime","componentWillUnmount","clearInterval","generatePlayButtonContent","getThisEpisodesTopics","temp","map","topic","push","console","log","calculateProcentage","start","stop","timestamp","Math","floor","progress","querySelector","style","togglePlay","status","play","pause","forwardAudioToTimeStamp","time","player","generateTimeStampNumbers","startValue","stopValue","checkTopicListClass","render","images","url","name","audio_preview_url","title","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport \"../App.css\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { faPlayCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faPauseCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst spotifyWebApi = new Spotify();\r\nconst topics = require(\"../topics.json\");\r\nconst episodeId = window.location.href.substring(\r\n  window.location.href.lastIndexOf(\"/\") + 1\r\n);\r\n\r\nclass Episode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      episode: \"\",\r\n      show: \"\",\r\n      currentTime: 0,\r\n      playing: false,\r\n      FontAwesomeIcon: \"faPlayCircle\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var episodeId = window.location.href.substring(\r\n      window.location.href.lastIndexOf(\"/\") + 1\r\n    );\r\n    spotifyWebApi.getEpisode(episodeId).then((response) => {\r\n      this.setState({\r\n        episode: response,\r\n        show: response.show,\r\n      });\r\n    });\r\n\r\n    this.inter = setInterval(() => {\r\n      let audio = document.getElementById(\"Player\");\r\n      let currentTime = audio.currentTime;\r\n      let duration = 30; //all audio-clips are previews of 30s from the podcast.\r\n      let percent = (currentTime / duration) * 100 + \"%\";\r\n      this.updateTimeline(percent);\r\n      this.updateTime(currentTime);\r\n    }, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.inter);\r\n  }\r\n\r\n  generatePlayButtonContent() {\r\n    if (this.state.playing) {\r\n      return [<FontAwesomeIcon icon={faPauseCircle} />];\r\n    } else {\r\n      return [<FontAwesomeIcon icon={faPlayCircle} />];\r\n    }\r\n  }\r\n\r\n  getThisEpisodesTopics() {\r\n    var temp = [];\r\n    topics.map((topic) => {\r\n      if (topic.episodeId === \"2QG2XPrjKY6HYSjmxflMzP\") {\r\n        temp.push(topic);\r\n      }\r\n    });\r\n    console.log(temp);\r\n    return temp;\r\n  }\r\n\r\n  calculateProcentage(start, stop) {\r\n    let duration = 30;\r\n    return ((stop - start) / duration) * 100;\r\n  }\r\n\r\n  updateTime(timestamp) {\r\n    timestamp = Math.floor(timestamp);\r\n    this.setState({\r\n      currentTime: timestamp,\r\n    });\r\n  }\r\n\r\n  updateTimeline(percent) {\r\n    let progress = document.querySelector(\".timeline-progress\");\r\n    progress.style[\"width\"] = percent;\r\n  }\r\n\r\n  togglePlay() {\r\n    let status = this.state.playing;\r\n    let audio = document.getElementById(\"Player\");\r\n\r\n    //if not currently playing\r\n    if (!status) {\r\n      status = true;\r\n      audio.play();\r\n    } else if (status) {\r\n      audio.pause();\r\n      status = false;\r\n    }\r\n    this.setState({ playing: status });\r\n  }\r\n\r\n  forwardAudioToTimeStamp(time) {\r\n    var player = document.getElementById(\"Player\");\r\n    player.currentTime = time;\r\n    let percent = (player.currentTime / 30) * 100 + \"%\";\r\n    this.updateTimeline(percent);\r\n    this.updateTime(time);\r\n  }\r\n\r\n  generateTimeStampNumbers(start, stop) {\r\n    let startValue;\r\n    let stopValue;\r\n    if (start < 10) {\r\n      startValue = `0:0${start}`;\r\n    }\r\n    if (start > 9) {\r\n      startValue = `0:${start}`;\r\n    }\r\n    if (stop < 10) {\r\n      stopValue = `0:0${stop}`;\r\n    }\r\n    if (stop > 9) {\r\n      stopValue = `0:${stop}`;\r\n    }\r\n\r\n    return `${startValue} - ${stopValue} `;\r\n  }\r\n\r\n  checkTopicListClass(start, stop) {\r\n    if (\r\n      this.state.currentTime < stop - 0.5 &&\r\n      this.state.currentTime > start - 0.5\r\n    ) {\r\n      return \"activeTopicList\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.show.images) {\r\n      return <span></span>;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col col-lg-9 episodeDescriptionContainer\">\r\n            <div className=\"episodeDescriptionInnerContainer\">\r\n              <Link className=\"backBtn\" to=\"/discover\">\r\n                ← Back to discover\r\n              </Link>\r\n\r\n              <div className=\"row episodeHeaderRow\">\r\n                <div className=\"col-lg-3\">\r\n                  <img\r\n                    className=\"episode-thumbnail\"\r\n                    src={this.state.episode.images[0].url}\r\n                    alt=\"episode thumbnail\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-lg-9 episodeHeader\">\r\n                  <div className=\"episodeFragment\">\r\n                    <h3 className=\"episodeType\">Podcast</h3>\r\n                    <h1 className=\"episodeTitle\"> {this.state.episode.name}</h1>\r\n                    <h2 className=\"episodePublisher\">{this.state.show.name}</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row episodePlayerContainer\">\r\n                <audio id=\"Player\">\r\n                  <source\r\n                    src={this.state.episode.audio_preview_url}\r\n                    type=\"audio/mpeg\"\r\n                  ></source>\r\n                </audio>\r\n\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"timeline\">\r\n                    <ProgressBar className=\"progressBarContainer\">\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <ProgressBar\r\n                            data-tip\r\n                            data-for={topic.title}\r\n                            className=\"topicTimelineSegment\"\r\n                            now={this.calculateProcentage(\r\n                              topic.start,\r\n                              topic.stop\r\n                            )}\r\n                            onClick={() =>\r\n                              this.forwardAudioToTimeStamp(topic.start)\r\n                            }\r\n                          />\r\n                        );\r\n                      })}\r\n\r\n                      {topics.map((topic) => {\r\n                        return (\r\n                          <ReactTooltip\r\n                            id={topic.title}\r\n                            place=\"bottom\"\r\n                            type=\"light\"\r\n                            effect=\"solid\"\r\n                          >\r\n                            <h1 className=\"tooltipTitle\">{topic.title}</h1>\r\n                            <p className=\"tooltipDescription\">\r\n                              {this.generateTimeStampNumbers(\r\n                                topic.start,\r\n                                topic.stop\r\n                              )}\r\n                            </p>\r\n                          </ReactTooltip>\r\n                        );\r\n                      })}\r\n                    </ProgressBar>\r\n\r\n                    <div className=\"timeline-progress\"></div>\r\n                  </div>\r\n                  <div className=\"playerControls\">\r\n                    <a className=\"playBtn\" onClick={() => this.togglePlay()}>\r\n                      {this.generatePlayButtonContent()}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"episodeDescriptionContainer\">\r\n                <h2 className=\"episodeDescriptionTitle\">Episode description</h2>\r\n                <p className=\"episodeDescriptionText\">\r\n                  {this.state.episode.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col col-lg-3 episodeTopicsContainer\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item className=\"listGroupItemHeader\">\r\n                Episode topics\r\n              </ListGroup.Item>\r\n\r\n              {this.getThisEpisodesTopics().map((topic) => {\r\n                return (\r\n                  <ListGroup.Item\r\n                    onClick={() => this.forwardAudioToTimeStamp(topic.start)}\r\n                    className={this.checkTopicListClass(\r\n                      topic.start,\r\n                      topic.stop\r\n                    )}\r\n                  >\r\n                    <span className=\"listGroupItemTitle\">{topic.title}</span>\r\n                    <span className=\"listGroupItemTime\">\r\n                      {this.generateTimeStampNumbers(topic.start, topic.stop)}\r\n                    </span>\r\n                  </ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Episode;\r\n"]},"metadata":{},"sourceType":"module"}