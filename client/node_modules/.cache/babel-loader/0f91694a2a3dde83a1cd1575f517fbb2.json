{"ast":null,"code":"var _jsxFileName = \"/Users/Akerman/Desktop/projects/spotify/client/src/App.js\";\nimport React, { Component } from \"react\"; //import SongList from \"./components/SongList\";\n\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\"\n      },\n      songs: []\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name\n        }\n      });\n    });\n  }\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then(response => {\n      console.log(response);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, response.tracks.limit), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, response.tracks.items.map(result => /*#__PURE__*/React.createElement(\"li\", {\n        key: result.track_number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, result.name))));\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, \"Log in with Spotify\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }\n      }, \"Logged in\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, this.showSignIn(), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Now playing: \", this.state.nowPlaying.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getNowPlaying(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Check now playing\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.searchSong(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"search\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, this.state.searchOutput.map(result => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, result.song, \", \", result.artist, \", \", result.album))), this.searchSong());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Akerman/Desktop/projects/spotify/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","songs","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","searchSong","searchTracks","console","log","tracks","limit","items","map","result","track_number","showSignIn","render","searchOutput","song","artist","album"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import SongList from \"./components/SongList\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\",\n      },\n      songs: [],\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyWebApi.getMyCurrentPlaybackState().then((response) => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n        },\n      });\n    });\n  }\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then((response) => {\n      console.log(response);\n      return (\n        <React.Fragment>\n          <h1>{response.tracks.limit}</h1>\n          <ul>\n            {response.tracks.items.map((result) => (\n              <li key={result.track_number}>{result.name}</li>\n            ))}\n          </ul>\n        </React.Fragment>\n      );\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return (\n        <a href=\"http://localhost:8888\">\n          <button>Log in with Spotify</button>\n        </a>\n      );\n    } else {\n      return <div>Logged in</div>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <SongList /> */}\n        {this.showSignIn()}\n        <div>Now playing: {this.state.nowPlaying.name}</div>\n        <button onClick={() => this.getNowPlaying()}>Check now playing</button>\n        <button onClick={() => this.searchSong()}>search</button>\n        <ul>\n          {this.state.searchOutput.map((result) => (\n            <li>\n              {result.song}, {result.artist}, {result.album}\n            </li>\n          ))}\n        </ul>\n        {this.searchSong()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}