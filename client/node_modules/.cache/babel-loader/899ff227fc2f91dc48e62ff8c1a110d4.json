{"ast":null,"code":"var _jsxFileName = \"/Users/Akerman/Desktop/projects/spotify/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        searchInput: event.target.value\n      });\n    };\n\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\"\n      },\n      songs: [],\n      searchInput: \"\"\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then(response => {\n      this.setState({\n        // songs: response.tracks.items,\n        songs: response.tracks.items.sort((a, b) => parseFloat(b.popularity) - parseFloat(a.popularity) //sorts out of popularity\n        )\n      });\n      console.log(this.state.songs);\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Log in with Spotify\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, \"Logged in\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, this.showSignIn(), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Find the song for the lyrics stuck on your\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"\\uD83E\\uDDE0\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.searchSong(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Search lyrics\")), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"myTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Song name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Authors\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Popularity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, this.state.songs.map(result => /*#__PURE__*/React.createElement(\"tr\", {\n      key: result.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, result.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, result.artists.map(result => \",\" + result.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, result.popularity))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Akerman/Desktop/projects/spotify/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","handleChange","event","setState","searchInput","target","value","params","getHashParams","state","loggedIn","access_token","nowPlaying","name","songs","setAccessToken","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","searchSong","searchTracks","then","response","tracks","items","sort","a","b","parseFloat","popularity","console","log","showSignIn","render","handleSubmit","map","result","id","artists"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"spotify-web-api-js\";\nconst spotifyWebApi = new Spotify(); //needs to be initialized since it is a class.\n\nclass App extends Component {\n  constructor() {\n    super();\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: {\n        name: \"not checked\",\n      },\n      songs: [],\n      searchInput: \"\",\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    while ((e = r.exec(q))) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchInput: event.target.value });\n  };\n\n  searchSong() {\n    spotifyWebApi.searchTracks(\"hello\", \"track\").then((response) => {\n      this.setState({\n        // songs: response.tracks.items,\n        songs: response.tracks.items.sort(\n          (a, b) => parseFloat(b.popularity) - parseFloat(a.popularity) //sorts out of popularity\n        ),\n      });\n\n      console.log(this.state.songs);\n    });\n  }\n\n  showSignIn() {\n    if (!this.state.loggedIn) {\n      return (\n        <a href=\"http://localhost:8888\">\n          <button>Log in with Spotify</button>\n        </a>\n      );\n    } else {\n      return <div>Logged in</div>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.showSignIn()}\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <h1>\n              Find the song for the lyrics stuck on your{\" \"}\n              <span role=\"img\" aria-label=\"emoji\">\n                🧠\n              </span>\n            </h1>\n            <br></br>\n            <input type=\"text\" name=\"name\" onChange={this.handleChange} />\n          </label>\n          <button type=\"submit\" onClick={() => this.searchSong()}>\n            Search lyrics\n          </button>\n        </form>\n        <table className=\"myTable\">\n          <thead>\n            <tr>\n              <th>Song name</th>\n              <th>Authors</th>\n              <th>Popularity</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.songs.map((result) => (\n              <tr key={result.id}>\n                <td>{result.name}</td>\n                <td>{result.artists.map((result) => \",\" + result.name)}</td>\n                <td>{result.popularity}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}